server.port=8080
spring.datasource.url=jdbc:mysql://localhost:8889/7A_db?createDatabaseIfNotExist=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# config du port du serveur Tomcat et du contexte de l'appli
#server.servlet.context-path=/
logging.level.root=INFO
#com.demos.arche7.apiUrl=http://localhost:8080/septArche/api
# config de l'accès à la base de données géré par Spring



## hibernate générera du SQL adapté à h2
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## mise en place de la console de h2
## écoute sur le même port que Tomcat : http://localhost:8080/setpArche/h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2

# config hibernate
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
#spring.jpa.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

# gestion du second level cache
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#spring.jpa.properties.hibernate.cache.region.factory_class= org.hibernate.cache.jcache.JCacheRegionFactory
#spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE

# le fichier data.sql sera exécuté après le lancement de la base
#spring.jpa.defer-datasource-initialization=true

